{"version":3,"sources":["logo192.png","TrackerForm/TrackerForm.js","LeaderBoards/Leaderboard.js","Report/Report.js","LeaderBoards/Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","doc","sheet","rows","keyRows","actData","name","SPREADSHEET_ID","TrackerForm","props","a","require","GoogleSpreadsheet","creds","useServiceAccountAuth","loadInfo","sheetsByIndex","getRows","saveActivity","n","r","d","s","addRow","activity","result","date","sort","console","log","Date","state","writeAcitivty","setState","submitted","units","other","handleChange","bind","getDoc","evt","this","target","value","className","onSubmit","onChange","field","type","onClick","stlye","flexDirection","Component","Board","leaders","style","color","substring","indexOf","Leaderboard","getSheetData","Promise","resolve","reject","setTimeout","undefined","findCategories","fullSet","cats","map","placed","i","length","push","findPersonalTotals","ppl","forEach","parseFloat","num","splitByCategory","categories","catSplit","j","activityResults","temp","totalResults","findPersonalReults","personName","filter","act","data","loading","f","then","error","alert","events","catResult","printable","catRes","index","key","padding","size","Report","login","findPersonByNum","loggedIn","keyNum","personalData","generalResult","marginLeft","marginRgight","App","src","y","tagOuter","marginTop","href","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.401e6cbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.28a651c6.png\";","import React, { Component } from 'react';\r\nimport './TrackerForm.css';\r\nimport { Form, Text } from 'informed';\r\n\r\nconst SPREADSHEET_ID = '1JKeiRZOT57uLf1OzpcpWU1l1DVSRL6ltXrGjtJ7Xsr0'; //from the URL of your blank Google Sheet\r\n\r\nvar doc;\r\nvar sheet;\r\n\r\nexport class TrackerForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { name:'' , activity:'' , units:'' , result:'' , submitted: false , other: false};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        getDoc();\r\n        async function getDoc() {\r\n            const { GoogleSpreadsheet } = require('google-spreadsheet');\r\n            const creds = require('./mustangs-tracker-447125d7078c.json');\r\n            doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n            await doc.useServiceAccountAuth(creds);\r\n            await doc.loadInfo();\r\n            sheet = doc.sheetsByIndex[0];\r\n            //await sheet.addRow({ name: 'Larry Page', email: 'larry@google.com' }); //... WRITE\r\n            \r\n            const rows = await sheet.getRows(); // can pass in { limit, offset } .. READ\r\n            //console.log(rows[0].name); // 'Larry Page\r\n            }\r\n        \r\n    }\r\n\r\n    handleChange (evt) {\r\n            this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    saveActivity = () => {\r\n            console.log(\"saving\")\r\n            async function writeAcitivty(n,a,r,d,s){\r\n                sheet = doc.sheetsByIndex[0];\r\n                await sheet.addRow({name: n , activity: a , result: r , date: d , sort: s});\r\n            }\r\n            var d = new Date();\r\n            var s = \"\";\r\n            if(this.state.activity == \"Triple Broad Jump\"){\r\n                s = \"h,s\"; //higher is better , single\r\n            }\r\n            else if (this.state.activity == \"Run - General\" || this.state.activity == \"Weight Room\" || this.state.activity == \"Physical Job\"){\r\n                s = \"h,c\"; //high is better , cumulative\r\n            }\r\n            else if (this.state.activity == \"Other\") {\r\n                s = \"x\"; //for other category, no sorting or display\r\n            }\r\n            else{\r\n                s = \"l,s\"; //lower is better , single\r\n            }\r\n            writeAcitivty(this.state.name , this.state.activity , this.state.result , d , s);\r\n            this.setState({submitted: true})\r\n        }\r\n\r\n    render() { \r\n        const activityOptions = [\"5km run (mm:ss:ms)\",\"400m (mm:ss:ms)\",'Triple Broad Jump (inches\")(*)',\"Z-Test (mm:ss:ms)\",\"Weight Room (hh:mm) (c)\"]\r\n        const defaultOption = activityOptions[0];\r\n        if(this.state.submitted == false){\r\n            return (\r\n                <div className=\"Form\">\r\n                    <Form onSubmit={this.saveActivity}>\r\n                        <label      name=\"name\"     onChange={this.handleChange} className=\"TxtF\">Name:<Text field=\"name\" className=\"Field\"/></label>\r\n                        <label className=\"TxtF\" >Acitvity:\r\n                            <select   className=\"Field\"  name=\"activity\" onChange={this.handleChange} value={this.state.activity}>\r\n                                <option value=\"n/a\">Select Below</option>\r\n                                <option value=\"Run - 5km\">Run - 5km</option>\r\n                                <option value=\"Run - 400m\">Run - 400m</option>\r\n                                <option value=\"Triple Broad Jump\">Triple Broad Jump</option>\r\n                                <option value=\"Z-Test\">Z-Test</option>\r\n                                <option value=\"10-Cut\">10-Cut</option>\r\n                                <option value=\"Weight Room\">Weight Room</option>\r\n                                <option value=\"Run - General\">Run - General</option>\r\n                                <option value=\"Physical Job\">Physical Work Hours</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </label>\r\n                        <label      name=\"result\"   onChange={this.handleChange} className=\"TxtF\">Result:<Text field='result' className=\"Field\"/></label>\r\n                        <button type='submit' onClick={this.saveActivity} className=\"SubmitButton\">Save</button>\r\n                    </Form>\r\n                    <div className=\"UnitKey\">\r\n                        <h2>Activity Units</h2>\r\n                        <p>Run - 5km            (mm:ss)</p>\r\n                        <p>Run - 400m           (mm:ss)</p>\r\n                        <p>Triple Broad Jump    (Inches)</p>\r\n                        <p>Z-Test               (ss.ms)</p>\r\n                        <p>10-Cut               (ss.ms)</p>\r\n                        <p>Weight Room          (hours)     cumulative*</p>\r\n                        <p>Run - General        (km)        cumulative*</p>\r\n                        <p>Physical Work Hours  (hours)     cumulative*</p>\r\n                        <p>Other                (specify in result field)</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"Form\" stlye={{flexDirection: \"column\"}}>\r\n                    <h1 className=\"Message\">Activtity has been recorded!</h1>\r\n                    <p className=\"Message\">Refresh this page to submit a new activity</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default TrackerForm\r\n","import React, { Component } from 'react'\r\nimport \"./LeaderBoard.css\"\r\nimport Board from \"./Board.js\"\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst SPREADSHEET_ID = '1JKeiRZOT57uLf1OzpcpWU1l1DVSRL6ltXrGjtJ7Xsr0';\r\nconst leaderboardLength = 3;\r\n\r\nvar doc;\r\nvar sheet;\r\nvar rows;\r\n\r\nexport class Leaderboard extends Component {\r\n    constructor(props){\r\n        rows = [];\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: true,\r\n        }\r\n        async function f() {\r\n            async function getDoc() {\r\n                const { GoogleSpreadsheet } = require('google-spreadsheet');\r\n                const creds = require('./mustangs-tracker-447125d7078c.json');\r\n                doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();\r\n                sheet = doc.sheetsByIndex[0];\r\n                rows = await sheet.getRows(); \r\n                return(rows);\r\n            }\r\n            let getSheetData = new Promise(function(resolve,reject){\r\n                setTimeout(() => {\r\n                    if(getDoc() != undefined)\r\n                        resolve(getDoc());\r\n                    else {\r\n                        reject(\"did not load\");\r\n                    }\r\n                }, 5000);\r\n            })\r\n            await getSheetData;\r\n        }\r\n        f();\r\n    } \r\n    \r\n    findCategories = (fullSet) => { //takes in full, unsorted, set of responses and finds the number of different categories\r\n        let cats = [];\r\n        fullSet.map(result => {\r\n            let placed = false;\r\n            for(let i=0 ; i<fullSet.length && !placed; i++){\r\n                if(cats[i] == result.activity){ //check if activity type has been recorded yet\r\n                    placed = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(placed == false){ //is activity was not matched, it is added to running list of options\r\n                cats.push(result.activity);\r\n            }\r\n        })\r\n        return cats;\r\n    }\r\n\r\n    findPersonalTotals = (fullSet) => { //takes in full, unsorted, set of responses and finds the number of different categories\r\n        let ppl = [];\r\n        fullSet.forEach(result => {\r\n            let placed = false;\r\n            for(let i=0 ; i<ppl.length && !placed; i++){\r\n                if(ppl[i].name == result.name){ \r\n                    placed = true;\r\n                    ppl[i].result += parseFloat(result.result);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(placed == false){ //is activity was not matched, it is added to running list of options\r\n                var num = parseFloat(result.result);\r\n                ppl.push({name: result.name , result: num , date: \"n/a\"});\r\n            }\r\n        })\r\n        return ppl;\r\n    }\r\n\r\n    splitByCategory = (fullSet , categories) => { //split data by activity takes full set of unorganized data and the list of categories to spilt it into\r\n        let catSplit = []; //will become 2d array\r\n        for(let i=0; i<categories.length; i++){ //creates empty array for each category (to be filled with result objects)\r\n            let x = [];\r\n            catSplit.push(x);\r\n        }\r\n        for(let i=0 ; i<fullSet.length ; i++){\r\n            for(let j=0 ; j<catSplit.length ; j++){\r\n                if(fullSet[i].activity == categories[j]){\r\n                    catSplit[j].push(fullSet[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return catSplit;\r\n    }\r\n   \r\n    sort = (activityResults) => { //bubble sort that can sort in either direction\r\n        let temp = null;\r\n        if(activityResults[0].sort == \"h,s\") { //for activities where higher is better\r\n            for(let i=0 ; i<activityResults.length ; i++){\r\n                for(let j=i+1 ; j<activityResults.length ; j++){\r\n                    if(activityResults[j].result > activityResults[i].result){\r\n                        temp = activityResults[i];\r\n                        activityResults[i] = activityResults[j];\r\n                        activityResults[j] = temp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(activityResults[0].sort == (\"h,c\")){\r\n            let totalResults = this.findPersonalTotals(activityResults);\r\n            for(let i=0 ; i<totalResults.length ; i++){\r\n                for(let j=i+1 ; j<totalResults.length ; j++){\r\n                    if(totalResults[j].result > totalResults[i].result){\r\n                        temp = totalResults[i];\r\n                        totalResults[i] = totalResults[j];\r\n                        totalResults[j] = temp;\r\n                    }\r\n                }\r\n            }\r\n            return totalResults;\r\n        }\r\n        else { //for categories where lower is better\r\n            for(let i=0 ; i<activityResults.length ; i++){\r\n                for(let j=i+1 ; j<activityResults.length ; j++){\r\n                    if(activityResults[j].result < activityResults[i].result){\r\n                        temp = activityResults[i];\r\n                        activityResults[i] = activityResults[j];\r\n                        activityResults[j] = temp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return activityResults;\r\n    }\r\n\r\n    findPersonalReults = (fullSet, personName) => { //returns dataset with all results (of any activity) for a single person\r\n        return(fullSet.filter(act => act.name == personName))\r\n    }\r\n\r\n    render() {\r\n        let promise = new Promise(function(resolve, reject) { //timeout to allow sheet loading (quick and dirty)\r\n            setTimeout(() => resolve(\"done!\"), 8000);\r\n          });\r\n        promise.then(\r\n            result => {this.setState({data: rows , loading: false});}, // shows \"done!\" after 1 second\r\n            error => alert(error) // doesn't run\r\n        );\r\n        let events = this.findCategories(rows) //holds all categories that were found\r\n        let catSplit = this.splitByCategory(rows,events);\r\n        for(let i=0 ; i<catSplit.length ; i++){\r\n            let temp = this.sort(catSplit[i]);\r\n            catSplit[i] = temp;\r\n        }\r\n\r\n        catSplit.forEach(catResult => { //fill in leaderboards with empty objects\r\n            while(catResult.length < leaderboardLength){\r\n                catResult.push({name: \"\" , result: \"\" , date: '--/--/--'});\r\n            }\r\n        })\r\n        let printable = catSplit.map(function(catRes , index){\r\n            if(events[index] == \"Other\"){\r\n                return(<div></div>);\r\n            } \r\n            else{\r\n                return(\r\n                    <Board activity={events[index]} leaders={catRes} key=\"\"></Board>\r\n                )   \r\n            }\r\n        })\r\n        if(this.state.loading == true){\r\n            return(\r\n                <div style={{color: \"cyan\" , padding: \"3rem\"}}>\r\n                    <ClipLoader size={250} color={\"cyan\"} loading={this.state.loading}/>\r\n                    <h3>Retrieving Leaderboards</h3>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"AllBoards\">\r\n                    {printable}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Leaderboard\r\n","import React, { Component } from 'react'\r\nimport \"./Report.css\"\r\nimport { Form, Text } from 'informed';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { act } from '@testing-library/react';\r\n\r\nconst SPREADSHEET_ID = '1JKeiRZOT57uLf1OzpcpWU1l1DVSRL6ltXrGjtJ7Xsr0';\r\n\r\n\r\nvar doc;\r\nvar sheet;\r\nvar keyRows;\r\nvar actData;\r\nvar name;\r\n\r\nexport class Report extends Component {\r\n    constructor(props){\r\n        keyRows = [];\r\n        actData = [];\r\n        super(props);\r\n        this.state = {\r\n            actData: [],\r\n            loading: true,\r\n            loggedIn: false,\r\n            key: \"\",\r\n        }\r\n        async function f() {\r\n            async function getDoc() {\r\n                const { GoogleSpreadsheet } = require('google-spreadsheet');\r\n                const creds = require('./mustangs-tracker-447125d7078c.json');\r\n                doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();\r\n                sheet = doc.sheetsByIndex[1];\r\n                keyRows = await sheet.getRows(); \r\n                actData = await doc.sheetsByIndex[0].getRows();\r\n                return(keyRows);\r\n            }\r\n            let getSheetData = new Promise(function(resolve,reject){\r\n                setTimeout(() => {\r\n                    if(getDoc() != undefined)\r\n                        resolve(getDoc());\r\n                    else {\r\n                        reject(\"did not load\");\r\n                    }\r\n                }, 5000);\r\n            })\r\n            await getSheetData;\r\n        }\r\n        f();\r\n    } \r\n\r\n    handleChange = (evt) => {\r\n        this.setState({key: evt.target.value});\r\n    }\r\n\r\n    login = () => {\r\n        this.findPersonByNum(this.state.key);\r\n        this.setState({loggedIn: true})\r\n    }\r\n\r\n    findPersonByNum = (keyNum) =>{\r\n        for(let i=0 ; i<keyRows.length ; i++){\r\n            if(keyNum == keyRows[i].key){\r\n                name = keyRows[i].name;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let promise = new Promise(function(resolve, reject) { //timeout to allow key loading\r\n            setTimeout(() => resolve(\"done!\"), 8000);\r\n          });\r\n        promise.then(\r\n            result => {this.setState({data: keyRows , loading: false}); console.log(actData)}, // shows \"done!\" after 1 second\r\n            error => alert(error) // doesn't run\r\n        );\r\n        console.log(keyRows)\r\n        if(this.state.loading == true){ //loading, pre-login\r\n            return(\r\n            <div style={{color: \"cyan\" , padding: \"3rem\"}}>\r\n            <ClipLoader size={250} color={\"cyan\"} loading={this.state.loading}/>\r\n            <h3>Retrieving Login Data</h3>\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n            if(this.state.loggedIn == true){ //loaded and logged in\r\n                const personalData = actData.filter(generalResult => generalResult.name == name)\r\n                console.log(name);\r\n                console.log(personalData);\r\n                let printable = personalData.map(result => {\r\n                    return(\r\n                        <div className=\"ResultLine\"> \r\n                            <p style={{marginLeft: \"6rem\"}}>{result.date.substring(0,result.date.indexOf(\"T\"))}</p>\r\n                            <p style={{marginLeft: \"6rem\"}}>{result.activity}</p>\r\n                            <p style={{marginLeft: \"6rem\" , marginRgight: \"6rem\"}}>{result.result}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n                return(\r\n                    <div>\r\n                        <h1>{name}'s Activity Report</h1>\r\n                        <div className=\"ResultPanel\">\r\n                            {printable}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else{   //loaded but not logged in\r\n                return(\r\n                    <div>\r\n                        <h1>Personal Activity History</h1>\r\n                        <h4>Enter your personal key here</h4>\r\n                        <p style={{color: \"grey\"}}>Message Julia or Jason about a personal key if you don't have one</p>\r\n                        <Form onSubmit={this.login}>\r\n                            <label name=\"keyField\" onChange={this.handleChange}>Key #:<Text field=\"name\" className=\"Field\"/></label>\r\n                            <button type='submit' onClick={this.login} className=\"SubmitButton\">Login</button>\r\n                        </Form>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Report\r\n","import React, { Component } from 'react'\r\nimport {\r\n    useTable,\r\n    useGroupBy,\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n  } from 'react-table'\r\n\r\nexport class Board extends Component {\r\n    render() {\r\n        let activity = this.props.activity;\r\n        let leaders = this.props.leaders;\r\n    \r\n        return (\r\n            <div className=\"Panel\">\r\n                <header className=\"PanelHead\">\r\n                    <h1>{activity}</h1>\r\n                </header>\r\n                <table>\r\n                    <tr>\r\n                        <th></th><th>Name</th><th>Result</th><th>Date</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style={{color: \"#7724bf\"}}>1.</th><th>{leaders[0].name}</th><th>{leaders[0].result}</th><th>{leaders[0].date.substring(0,leaders[0].date.indexOf('T'))}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style={{color: \"#7724bf\"}}>2.</th><th>{leaders[1].name}</th><th>{leaders[1].result}</th><th>{leaders[1].date.substring(0,leaders[1].date.indexOf('T'))}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style={{color: \"#7724bf\"}}>3.</th><th>{leaders[2].name}</th><th>{leaders[2].result}</th><th>{leaders[2].date.substring(0,leaders[2].date.indexOf('T'))}</th>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TrackerForm from './TrackerForm/TrackerForm.js'\r\nimport Leaderboards from \"./LeaderBoards/Leaderboard.js\"\r\nimport Report from \"./Report/Report.js\"\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport { Parallax } from 'react-scroll-parallax';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ParallaxProvider>\r\n        <div className=\"App\">\r\n          <div className=\"App-header\">\r\n            <img src={require(\"./logo192.png\")} className=\"Head-logo\"></img>\r\n            <h1>Western Open Ultimate 2020</h1>\r\n          </div>\r\n          <Parallax y={[30, -10]} tagOuter=\"figure\">\r\n            <div>\r\n              <h1 style={{color: \"white\" , marginTop: \"6rem\"}}>New Activity Form</h1>\r\n              <a href=\"https://docs.google.com/document/d/1sOGgjXNMIw28HDk6v3QTIQcnW7rvl3rVWPDmuoBtkWI/edit\" target=\"_blank\" style={{color: \"cyan\"}}>Workout Plan</a>\r\n              <TrackerForm/>\r\n              <div>\r\n                <h1 style={{color: \"white\" , marginTop: \"1rem\" , marginBottom: \"0rem\"}}>Current Leaderboards</h1>\r\n              </div>\r\n            </div>\r\n            <Leaderboards/>\r\n            <Report/>\r\n          </Parallax>\r\n        </div>\r\n      </ParallaxProvider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}